@using System.Globalization
@model BaiTap_23WebC_Nhom10.Models.Product
@section title {
    Product - eElectronics - HTML eCommerce Template
}
@section subtitle {
    
}
@{
    var cultureInfo = new CultureInfo("vi-VN");
    var discountRate = Model.Discount / 100; // chuyển % sang tỷ lệ
    var finalPrice = Model.Price * (1 - discountRate);
}

<div class="single-product-area">
    <div class="zigzag-bottom"></div>
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div class="single-sidebar">
                    <h2 class="sidebar-title">Search Products</h2>
                    <form action="">
                        <input type="text" placeholder="Search products..." />
                        <input type="submit" value="Search" />
                    </form>
                </div>
                @await Component.InvokeAsync("ProductSidebar")
                @await Component.InvokeAsync("ProductRecentPost")
            </div>

            <div class="col-md-8">
                <div class="product-content-right">
                    <h2>@Model.ProductName</h2>
                    @{
                        // Tìm ảnh chính để đặt làm src ban đầu
                        var initialMainImage = Model.ProductImages?.FirstOrDefault(i => i.IsMain);
                        var initialMainImagePath = initialMainImage?.ImagePath ?? "~/img/no-image.png";
                    }
                    <div class="row">
                        <div class="col-sm-6" style="position: relative;">
                            <img id="mainProductImg"
                                 src="@Url.Content(initialMainImagePath)"
                                 alt="@Model.ProductName"
                                 style="max-width:100%; height:auto;" />

                            <div class="product-gallery" id="productGallery" style="margin-top: 10px; display: flex; gap: 10px; flex-wrap: wrap;">

                               
                                @foreach (var img in Model.ProductImages)
                                {
                                    
                                       
                                        var isInitialMain = img.IsMain;
                                        var thumbnailBorder = isInitialMain ? "2px solid #5a8" : "1px solid #ddd"; 
                                   
                                    <div class="thumbnail-item" style="width: 80px; height: 80px; overflow: hidden; border: @thumbnailBorder; border-radius: 8px;">
                                        <img src="@Url.Content(img.ImagePath)"
                                             alt="@Model.ProductName"
                                             style="width:100%; height:100%; object-fit:cover; cursor:pointer;"
                                             onclick="changeMainImage('@Url.Content(img.ImagePath)', this)" />
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="product-inner">
                                <h2 class="product-name">@Model.ProductName</h2>
                                <div class="product-inner-price">
                                    <ins>@String.Format(cultureInfo, "{0:N0} VNĐ", finalPrice)</ins>
                                    @if (Model.Discount > 0)
                                    {
                                        <del>@String.Format(cultureInfo, "{0:N0} VNĐ", Model.Price)</del>
                                    }
                                </div>

                                <form action="" class="cart">
                                    <div class="quantity">
                                        <input type="number"
                                               size="4"
                                               class="input-text qty text"
                                               title="Qty"
                                               value="1"
                                               name="quantity"
                                               min="1"
                                               step="1" />
                                    </div>
                                    <button class="add_to_cart_button" type="submit">
                                        Add to cart
                                    </button>
                                </form>

                                <div class="product-inner-category">
                                    <p>
                                        Category: <a href="">@Model.Category?.CategoryName</a>.
                                        Tags:<a href="">@Model.Tag?.TagName</a>.
                                    </p>
                                </div>

                                <div role="tabpanel">
                                    <ul class="product-tab" role="tablist">
                                        <li role="presentation" class="active">
                                            <a href="#home"
                                               aria-controls="home"
                                               role="tab"
                                               data-toggle="tab">Description</a>
                                        </li>
                                        <li role="presentation">
                                            <a href="#profile"
                                               aria-controls="profile"
                                               role="tab"
                                               data-toggle="tab">Reviews</a>
                                        </li>
                                    </ul>
                                    <div class="tab-content">
                                        <div role="tabpanel"
                                             class="tab-pane fade in active"
                                             id="home">
                                            <h2>Product Description</h2>
                                            <p>
                                                @Model.Description
                                            </p>

                                        </div>
                                        <div role="tabpanel" class="tab-pane fade" id="profile">
                                            <h2>Reviews</h2>
                                            <div class="submit-review">
                                                <p>
                                                    <label for="name">Name</label>
                                                    <input name="name" type="text" />
                                                </p>
                                                <p>
                                                    <label for="email">Email</label>
                                                    <input name="email" type="email" />
                                                </p>
                                                <div class="rating-chooser">
                                                    <p>Your rating</p>

                                                    <div class="rating-wrap-post">
                                                        <i class="fa fa-star"></i>
                                                        <i class="fa fa-star"></i>
                                                        <i class="fa fa-star"></i>
                                                        <i class="fa fa-star"></i>
                                                        <i class="fa fa-star"></i>
                                                    </div>
                                                </div>
                                                <p>
                                                    <label for="review">Your review</label>
                                                    <textarea name="review"
                                                              id=""
                                                              cols="30"
                                                              rows="10"></textarea>
                                                </p>
                                                <p><input type="submit" value="Submit" /></p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="related-products-wrapper">
                        <h2 class="related-products-title">Related Products</h2>
                        <div class="related-products-carousel">
                            @await Component.InvokeAsync("ProductRelated")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section js {
    <style>
        .thumbnail-item {
            transition: border-color 0.2s;
        }

        .thumbnail-item.active {
                border: 2px solid #1abc9c !important; 
        }
    </style>
    <script>
        const mainImg = document.getElementById('mainProductImg');
        const gallery = document.getElementById('productGallery');
        const thumbnails = gallery.querySelectorAll('.thumbnail-item');

        
        function changeMainImage(newSrc, clickedElement) {
            
            mainImg.src = newSrc;

           
            thumbnails.forEach(item => {
                item.classList.remove('active');
                item.style.border = '1px solid #ddd';
            });

           
            const parentDiv = clickedElement.closest('.thumbnail-item');
            if (parentDiv) {
                parentDiv.classList.add('active');
                parentDiv.style.border = '2px solid #1abc9c';
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            const initialMainSrc = mainImg.getAttribute('src');
            thumbnails.forEach(item => {
                const img = item.querySelector('img');
                if (img && img.getAttribute('src') === initialMainSrc) {
                    item.classList.add('active');
                    item.style.border = '2px solid #1abc9c';
                }
            });
        });
    </script>
}